OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/VerbalHubz/Verbal-Hub/main/Orion%20Hub%20Ui", true))()

Window = OrionLib:MakeWindow({
    Name = "Verbal Hub Sigma Advance Ftap",
    HidePremium = false,
    SaveConfig = true,
    IntroEnabled = true,
    IntroText = "Welcome To Verbal Sigma Hub Ftap",
    IntroIcon = "rbxassetid://121559441445555",
    ConfigFolder = "OrionTest"
})

-- Services
 PS = game:GetService("Players")
 R = game:GetService("RunService")
 Cam = workspace.CurrentCamera

-- Player
 localPlayer = PS.LocalPlayer

-- Silent Aim Variables
local SIL
 dist = 30

 function STS()
    local Hitbox = {"Head", "Torso", "Left Leg", "Right Leg"}

    local function GetClosest()
        local Target, Closest = nil, math.huge

        for _, player in pairs(PS:GetPlayers()) do
            if player.Name ~= localPlayer.Name and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local playerPosition = localPlayer.Character.HumanoidRootPart.Position
                local humanoidRootPart = player.Character.HumanoidRootPart

                local screenPos, onScreen = Cam:WorldToScreenPoint(humanoidRootPart.Position)

                if onScreen then
                    local distance = (playerPosition - humanoidRootPart.Position).magnitude

                    if distance < Closest then
                        Closest = distance
                        Target = player
                    end
                end
            end
        end

        return Target
    end

    local Target
    R.RenderStepped:Connect(function()
        Target = GetClosest()
    end)

    local __namecall
    __namecall = hookmetamethod(game, "__namecall", function(...)
        local args = {...}
        local self = args[1]
        local method = getnamecallmethod()

        if self == workspace and not checkcaller() and method == "Raycast" and Target and Target.Character and Target.Character.HumanoidRootPart and localPlayer.Character.HumanoidRootPart and Target.Character.Humanoid.Health > 0 then
            local playerPosition = localPlayer.Character.HumanoidRootPart.Position
            local targetPosition = Target.Character.HumanoidRootPart.Position
            local distance = (playerPosition - targetPosition).magnitude
            
            local part = math.random(1, #Hitbox)
            local partn = Hitbox[part]
            local ch = Target.Character[partn]

            if distance <= dist and ch then
                args[3] = (Target.Character[partn].Position - args[2]).Unit * 1000 -- Adjust ray direction
                args[4] = RaycastParams.new()
                args[4].FilterDescendantsInstances = {Target.Character}
                args[4].FilterType = Enum.RaycastFilterType.Include
            end
        end

        return __namecall(unpack(args))
    end)
end


Tab:AddSlider({
    Name = "Reach Silent Aim",
    Min = 0,
    Max = 50,
    Default = 30,
    Callback = function(Value)
        dist = Value
    end
})

Tab:AddToggle({
    Name = "Silent Aim",
    Default = false,
    Callback = function(Value)
        SIL = Value
    end
})


