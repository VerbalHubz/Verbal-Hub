OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/VerbalHubz/Verbal-Hub/main/Orion%20Hub%20Ui",true))()
 
Window = OrionLib:MakeWindow({Name = "Verbal Hub Sigma Advance Ftap ",
HidePremium = false,
SaveConfig = true,
IntroEnabled = true,
IntroText = "Welcome To Verbal Sigma Hub Ftap",
IntroIcon = "rbxassetid://121559441445555",
ConfigFolder = "OrionTest"
})


GrabsTab = Window:MakeTab({
    Name = "telekinesis pc only beta mobile soon ",
    Icon = "rbxassetid://87851318303275",
    PremiumOnly = false
 })


 local SIL
 local dist = 30
 
 
 
 
 
  
     local function STS()
     local Hitbox = {"Head", "Torso", "Left Leg", "Right Leg"}
     
     local function GetClosest()
         local Target, Closest = nil, math.huge
         
         for _, player in pairs(PS:GetPlayers()) do
             if player.Name ~= localPlayer.Name and player.Character and localPlayer and localPlayer.Character and localPlayer.Character.HumanoidRootPart then
                 local playerPosition = localPlayer.Character.HumanoidRootPart.Position
                 local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
                 
                 if humanoidRootPart then
                     local screenPos, onScreen = Cam:WorldToScreenPoint(humanoidRootPart.Position)
                     
                     if onScreen then
                         local distance = (playerPosition - humanoidRootPart.Position).magnitude
                         
                         if distance < Closest then
                             Closest = distance
                             Target = player
                         end
                     end
                 end
             end
         end
         
         return Target
     end
     
     local Target
     local part
     local partn
     local ch
     
     R.RenderStepped:Connect(function()
         Target = GetClosest()
     end)
     
     local function CalculateDirection(Origin, Destination, Length)
         return (Destination - Origin).Unit * Length
     end
     
     local __namecall
     __namecall = hookmetamethod(game, "__namecall", function(...)
         local args = {...}
         local self = args[1]
         local method = getnamecallmethod()
         
         if self == workspace and not checkcaller() and method == "Raycast" and Target and Target.Character and Target.Character.HumanoidRootPart and localPlayer.Character.HumanoidRootPart and Target.Character.Humanoid and Target.Character.Humanoid.Health > 0 and not Target.InPlot.Value and SIL then
             local playerPosition = localPlayer.Character.HumanoidRootPart.Position
             local targetPosition = Target.Character.HumanoidRootPart.Position
             local distance = (playerPosition - targetPosition).magnitude
             part = math.random(1, #Hitbox)
             partn = Hitbox[part]
             ch = Target.Character[partn]
     
             if distance <= dist and ch then
                 args[3] = CalculateDirection(args[2], Target.Character[partn].Position, 1000)
                 args[4] = RaycastParams.new()
                 args[4].FilterDescendantsInstances = {Target.Character}
                 args[4].FilterType = Enum.RaycastFilterType.Include
                 part = nil
                 partn = nil
                 ch = nil
             end
         end
     
         return __namecall(unpack(args))
     end)
     end
     
 
     local GrabsTab = Window:MakeTab({
         Name = "Grabs",
         PremiumOnly = false
     })
     
     GrabsTab:AddSlider({
         Name = "Reach Silent Aim",
         Min = 0,
         Max = 50,
         Default = 30,
         Color = Color3.fromRGB(0, 255, 255), -- Set slider bar color (cyan in this case)
         HandleColor = Color3.fromRGB(255, 0, 255), -- Set the handle color (purple in this case)
         Transparency = 0.2, -- Optional: to give a cool transparency effect
         Callback = function(Value)
             dist = Value
         end
     })
     
     GrabsTab:AddToggle({
         Name = "Silent Aim",
         Default = false,
         Callback = function(Value)
             SIL = Value
         end
     })
     
     STS()
     
