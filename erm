--STOP SKIDDING 

--STOP SKIDDING

--STOP SKIDDING

--STOP SKIDDING

--STOP SKIDDING stupid skids

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local SoundService = game:GetService("SoundService")

local teleportDistance = 5
local blackHoleSoundId = 17422207457
local orbitRadius = 20
local orbitSpeed = 500
local loopkillDelay = 0.5

local whitelist = {
    ["JESSETC92BACKUP23"] = true,
    ["hahshsin"] = true,
    ["76rgoyf"] = true,
    ["ggerrtasalt"] = true,
    ["Lokick07"] = true,
    ["SaviorLiberty"] = true,
    ["lpina25"] = true,
    ["JESSETC92111"] = true,
    ["Blizz_T"] = true, 
}

-- Sound ID for spam
local spamSoundId = "rbxassetid://1939827707"
local soundObjects = {} 
local isSpamming = false 
local spamLoop 

local function spamAll()
    if isSpamming then return end
    isSpamming = true

    spamLoop = coroutine.create(function()
        while isSpamming do
            for _, player in ipairs(Players:GetPlayers()) do
                if not whitelist[player.Name] then
                    local character = player.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        for i = 1, 10 do 
                            local sound = Instance.new("Sound")
                            sound.SoundId = spamSoundId
                            sound.Looped = false
                            sound.Pitch = math.random(200, 200) / 200 
                            sound.Volume = 22
                            sound.Parent = character.HumanoidRootPart
                            sound:Play()
                            table.insert(soundObjects, sound)
                        end
                    end
                end
            end
            wait(4)
        end
    end)
    coroutine.resume(spamLoop)
end

local function unspamAll()
    if not isSpamming then return end
    isSpamming = false

    for _, sound in ipairs(soundObjects) do
        if sound then
            sound:Stop()
            sound:Destroy()
        end
    end
    soundObjects = {} 
end

local blackHoles = {}
local isPulling = {}

local function createRainbowTween(blackHole)
    local rainbowColors = {
        Color3.fromRGB(255, 0, 0),
        Color3.fromRGB(255, 165, 0),
        Color3.fromRGB(255, 255, 0),
        Color3.fromRGB(0, 255, 0),
        Color3.fromRGB(0, 0, 255),
        Color3.fromRGB(75, 0, 130),
        Color3.fromRGB(238, 130, 238)
    }
    
    local colorIndex = 1

    local function tweenColor()
        local nextColor = rainbowColors[colorIndex]
        colorIndex = (colorIndex % #rainbowColors) + 1

        local tween = TweenService:Create(
            blackHole,
            TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut),
            {Color = nextColor}
        )
        tween:Play()
        tween.Completed:Connect(function()
            tweenColor()
        end)
    end

    tweenColor()
end

local function createBlackHole(targetPlayer)
    local character = targetPlayer.Character
    if not character or blackHoles[targetPlayer.Name] then return end
    
    local blackHole = Instance.new("Part")
    blackHole.Size = Vector3.new(25, 25, 25)
    blackHole.Shape = Enum.PartType.Ball
    blackHole.Material = Enum.Material.Neon
    blackHole.Color = Color3.fromRGB(0, 0, 0)
    blackHole.Anchored = true
    blackHole.CanCollide = false
    blackHole.Parent = workspace

    local aura = Instance.new("ParticleEmitter")
    aura.Texture = "rbxassetid://1344771186"
    aura.Lifetime = NumberRange.new(1, 1)
    aura.Rate = 250
    aura.Size = NumberSequence.new(1)
    aura.Speed = NumberRange.new(500, 500)
    aura.Parent = blackHole

    blackHoles[targetPlayer.Name] = blackHole
    isPulling[targetPlayer.Name] = true

    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. blackHoleSoundId
    sound.Looped = true
    sound.Parent = SoundService
    sound:Play()

    createRainbowTween(blackHole)

    local angle = 0
    RunService.Heartbeat:Connect(function()
        if isPulling[targetPlayer.Name] and blackHoles[targetPlayer.Name] then
            local hrp = character:FindFirstChild("HumanoidRootPart")
            if hrp then
                angle = angle + orbitSpeed * RunService.Heartbeat:Wait()
                local offset = Vector3.new(math.cos(angle) * orbitRadius, 0, math.sin(angle) * orbitRadius)
                blackHole.Position = hrp.Position + offset

                for _, p in pairs(Players:GetPlayers()) do
                    if not whitelist[p.Name] then
                        if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                            local distance = (p.Character.HumanoidRootPart.Position - blackHole.Position).magnitude
                            if distance < 100 then
                                local force = Instance.new("BodyPosition")
                                force.MaxForce = Vector3.new(1e9, 1e9, 1e9)
                                force.Position = blackHole.Position
                                force.Parent = p.Character.HumanoidRootPart
                                task.wait(0.5)
                                force:Destroy()
                            end
                        end
                    end
                end
            end
        end
    end)
end

local function removeBlackHole(targetPlayer)
    if blackHoles[targetPlayer.Name] then
        local blackHole = blackHoles[targetPlayer.Name]
        blackHole:Destroy()
        blackHoles[targetPlayer.Name] = nil
        isPulling[targetPlayer.Name] = false

        for _, sound in pairs(SoundService:GetChildren()) do
            if sound:IsA("Sound") and sound.SoundId == "rbxassetid://" .. blackHoleSoundId then
                sound:Stop()
                sound:Destroy()
            end
        end
    end
end

local function teleportPlayer(playerToTeleport, targetPlayer)
    if whitelist[playerToTeleport.Name] or playerToTeleport.Name == targetPlayer.Name then return end
    local character = targetPlayer.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local hrp = character.HumanoidRootPart
        local teleportPosition = hrp.Position + hrp.CFrame.LookVector * teleportDistance
        playerToTeleport.Character:SetPrimaryPartCFrame(CFrame.new(teleportPosition))
    end
end

local function freezePlayer(player)
    if whitelist[player.Name] then return end
    local character = player.Character
    if character then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.Anchored = true
        end
    end
end

local function unfreezePlayer(player)
    if whitelist[player.Name] then return end
    local character = player.Character
    if character then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.Anchored = false
        end
    end
end


local function killPlayer(player)
    if not whitelist[player.Name] then
        local character = player.Character
        if character and character:FindFirstChild("Humanoid") then
            character.Humanoid.Health = 0
        end
    end
end

local loopKillPlayers = {} 

local function loopKill(player)
    if not whitelist[player.Name] then
        while loopKillPlayers[player.Name] do
            killPlayer(player)
            wait(loopkillDelay)
        end
    end
end

local function onChatted(player, message)
    if whitelist[player.Name] then
        local command = message:lower()

        if command == ":spam all" then
            spamAll() 
        elseif command == ":unspam all" then
            unspamAll() 
        elseif command == ":kick all" then
            for _, p in ipairs(Players:GetPlayers()) do
                if not whitelist[p.Name] then
                    p:Kick("You have been kicked by Owner/Admin player.")
                end
            end
        elseif command == ":loopkill all" then 
            loopKillPlayers[player.Name] = true
            loopKill(player)
        elseif command == ":unloopkill all" then
            loopKillPlayers[player.Name] = false
        elseif command == ":blackhole all" then
            createBlackHole(player)
        elseif command == ":unblackhole all" then
            removeBlackHole(player)
        elseif command:match("^:bring all") then
            for _, p in pairs(Players:GetPlayers()) do
                teleportPlayer(p, player)
            end
        elseif command == ":freeze all" then
            for _, p in pairs(Players:GetPlayers()) do
                freezePlayer(p)
            end
        elseif command == ":unfreeze all" then
            for _, p in pairs(Players:GetPlayers()) do
                unfreezePlayer(p)
            end
        elseif command == ":kill all" then
            for _, p in pairs(Players:GetPlayers()) do
                killPlayer(p)
            end
        elseif command:sub(1, 7) == ":chat all" then
            local chatMessage = command:sub(9)
            if chatMessage and chatMessage ~= "" then
                ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chatMessage, "All")
            end
        end
    end
end


for _, player in pairs(Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        onChatted(player, message)
    end)
end

Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        onChatted(player, message)
    end)
end)
