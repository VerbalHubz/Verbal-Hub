-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- Configuration
local teleportDistance = 5
local chatCommand = ":chat all"

-- Whitelisted players
local whitelist = {
    ["JESSETC92BACKUP1"] = true,
    ["hahshsin"] = true,
    ["76rgoyf"] = true,
    ["hdfghjbgg"] = true,
    ["Lokick07"] = true,
    ["JESSETC92BACKUP"] = true,
    ["Xx_sabrina726"] = true,
    ["ggerrtasalt"] = true
}

-- Muted, dizzy, confused, and paralyzed player states
local mutedPlayers = {}
local dizzyPlayers = {}
local confusedPlayers = {}
local paralyzedPlayers = {}

-- Function to teleport all players
local function teleportAllPlayers(targetPlayer)
    for _, playerToTeleport in ipairs(Players:GetPlayers()) do
        if not whitelist[playerToTeleport.Name] then
            local character = targetPlayer.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                local hrp = character.HumanoidRootPart
                local teleportPosition = hrp.Position + hrp.CFrame.LookVector * teleportDistance
                playerToTeleport.Character:SetPrimaryPartCFrame(CFrame.new(teleportPosition))
            end
        end
    end
end

-- Function to paralyze all players
local function paralyzeAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if not whitelist[player.Name] then
            paralyzedPlayers[player.Name] = true
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.PlatformStand = true
            end
        end
    end
end

-- Function to unparalyze all players
local function unparalyzeAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if not whitelist[player.Name] then
            paralyzedPlayers[player.Name] = nil
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.PlatformStand = false
            end
        end
    end
end

-- Function to shrink all players
local function shrinkAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if not whitelist[player.Name] then
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                character:SetPrimaryPartCFrame(character:GetPrimaryPartCFrame() * CFrame.new(0, 0.5, 0)) -- Reduce height
                character.HumanoidRootPart.Size = Vector3.new(1, 1, 1) -- Shrink size
            end
        end
    end
end

-- Function to grow all players
local function growAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if not whitelist[player.Name] then
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                character:SetPrimaryPartCFrame(character:GetPrimaryPartCFrame() * CFrame.new(0, -0.5, 0)) -- Increase height
                character.HumanoidRootPart.Size = Vector3.new(3, 3, 3) -- Grow size
            end
        end
    end
end

-- Function to make all players invisible
local function invisibleAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if not whitelist[player.Name] then
            local character = player.Character
            if character then
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.Transparency = 1
                    end
                end
            end
        end
    end
end

-- Function to make all players visible
local function visibleAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if not whitelist[player.Name] then
            local character = player.Character
            if character then
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.Transparency = 0
                    end
                end
            end
        end
    end
end

-- Function to give all players super jump
local function superJumpAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if not whitelist[player.Name] then
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.JumpPower = 200 -- Super jump power
            end
        end
    end
end

-- Function to restore normal jump
local function normalJumpAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if not whitelist[player.Name] then
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.JumpPower = 50 -- Normal jump power
            end
        end
    end
end

-- Function to slow all players
local function slowAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if not whitelist[player.Name] then
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.WalkSpeed = 8 -- Slower speed
            end
        end
    end
end

-- Function to speed up all players
local function fastAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if not whitelist[player.Name] then
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.WalkSpeed = 100 -- Faster speed
            end
        end
    end
end

-- Function to sit all players
local function sitAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if not whitelist[player.Name] then
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.Sit = true -- Force sit
            end
        end
    end
end

-- Function to handle chat commands
local function onChatted(player, message)
    if whitelist[player.Name] then -- Only whitelisted players can use commands
        local command = message:lower()

        if command == ":bring all" then
            teleportAllPlayers(player)
        elseif command == ":freeze all" then
            freezeAllPlayers()
        elseif command == ":unfreeze all" then
            unfreezeAllPlayers()
        elseif command == ":kick all" then
            for _, playerToKick in ipairs(Players:GetPlayers()) do
                if not whitelist[playerToKick.Name] then
                    playerToKick:Kick("You have been kicked from the game.")
                end
            end
        elseif command == ":fling all" then
            for _, playerToFling in ipairs(Players:GetPlayers()) do
                if not whitelist[playerToFling.Name] then
                    local character = playerToFling.Character
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        local hrp = character.HumanoidRootPart
                        hrp.Velocity = Vector3.new(math.random(-1000, 1000), math.random(500, 1000), math.random(-1000, 1000))
                    end
                end
            end
        elseif command == ":paralyze all" then
            paralyzeAllPlayers()
        elseif command == ":unparalyze all" then
            unparalyzeAllPlayers()
        elseif command == ":shrink all" then
            shrinkAllPlayers()
        elseif command == ":grow all" then
            growAllPlayers()
        elseif command == ":invisible all" then
            invisibleAllPlayers()
        elseif command == ":visible all" then
            visibleAllPlayers()
        elseif command == ":superjump all" then
            superJumpAllPlayers()
        elseif command == ":normaljump all" then
            normalJumpAllPlayers()
        elseif command == ":slow all" then
            slowAllPlayers()
        elseif command == ":fast all" then
            fastAllPlayers()
        elseif command == ":sit all" then
            sitAllPlayers()
        elseif command:sub(1, chatCommand:len()) == chatCommand then
            local chatMessage = message:sub(chatCommand:len() + 2) -- Extract the message after the command
            if chatMessage and chatMessage ~= "" then
                ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chatMessage, "All")
            end
        end
    end
end

-- Connect the chat event for players who join
Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        onChatted(player, message)
    end)
end)

-- Connect the chat event for existing players
for _, player in ipairs(Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        onChatted(player, message)
    end)
end
