local function main()
    -- Services
    local UserInputService = game:GetService("UserInputService")
    local RunService = game:GetService("RunService")
    local TweenService = game:GetService("TweenService")
    local SoundService = game:GetService("SoundService")
    local Camera = game.Workspace.CurrentCamera
    local player = game.Players.LocalPlayer
    local tiger = game.Workspace["Wooden Animals"].Tiger
    local controlEnabled = true -- Set to true initially to enable control
    local moveDirection = Vector3.new()
    local speed = 10 -- Adjust the speed as needed
    local cameraOffset = Vector3.new(0, 5, -10) -- Adjust the offset as needed
    local cursorSensitivity = 0.1 -- Adjust sensitivity to control how much the camera follows the cursor
    local isToggleActive = false
    local selectedOption = "Control Huge Tiger"
    local originalCameraType = Camera.CameraType
    local originalCameraSubject = Camera.CameraSubject

    -- Sound effects
    local toggleOnSoundId = "rbxassetid://1840422063"
    local toggleOffSoundId = "rbxassetid://858508159"

    -- Function to create a black and purple spinning warp effect
    local function createWarpEffect(duration)
        local warpGui = Instance.new("ScreenGui")
        warpGui.IgnoreGuiInset = true
        warpGui.ResetOnSpawn = false
        warpGui.Parent = player:WaitForChild("PlayerGui")

        local warpFrame = Instance.new("Frame")
        warpFrame.Size = UDim2.new(1.5, 0, 1.5, 0)
        warpFrame.Position = UDim2.new(-0.25, 0, -0.25, 0)
        warpFrame.BackgroundTransparency = 0.5
        warpFrame.Parent = warpGui

        local purpleFrame = Instance.new("Frame")
        purpleFrame.Size = UDim2.new(0.5, 0, 1, 0)
        purpleFrame.Position = UDim2.new(0, 0, 0, 0)
        purpleFrame.BackgroundColor3 = Color3.fromRGB(128, 0, 128)
        purpleFrame.BackgroundTransparency = 0.5
        purpleFrame.Parent = warpFrame

        local blackFrame = Instance.new("Frame")
        blackFrame.Size = UDim2.new(0.5, 0, 1, 0)
        blackFrame.Position = UDim2.new(0.5, 0, 0, 0)
        blackFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        blackFrame.BackgroundTransparency = 0.5
        blackFrame.Parent = warpFrame

        local gradient = Instance.new("UIGradient")
        gradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(128, 0, 128)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
        })
        gradient.Parent = warpFrame

        local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
        local tweenRotation = TweenService:Create(warpFrame, tweenInfo, {Rotation = 360})

        tweenRotation:Play()

        delay(duration, function()
            warpGui:Destroy()
        end)
    end

    -- Function to play sound effect
    local function playSound(soundId, duration)
        local sound = Instance.new("Sound")
        sound.SoundId = soundId
        sound.Volume = 1
        sound.Looped = false
        sound.Parent = SoundService

        sound:Play()
        delay(duration, function()
            sound:Stop()
            sound:Destroy()
        end)
    end

    -- Function to update tiger's movement
    local function updateMovement()
        if controlEnabled and isToggleActive and selectedOption == "Control Huge Tiger" then
            if tiger.PrimaryPart then
                local newVelocity = moveDirection * speed
                tiger.PrimaryPart.Velocity = Vector3.new(newVelocity.x, tiger.PrimaryPart.Velocity.y, newVelocity.z)
                tiger.PrimaryPart.CFrame = tiger.PrimaryPart.CFrame + (moveDirection * speed * RunService.RenderStepped:Wait())
            end
        end
    end

    -- Function to update camera position
    local function updateCamera()
        if controlEnabled and isToggleActive and selectedOption == "Control Huge Tiger" then
            local mouse = player:GetMouse()
            local cursorPosition = mouse.Hit.p
            local directionToCursor = (cursorPosition - Camera.CFrame.Position).Unit
            local offset = directionToCursor * cursorSensitivity
            local targetPosition = tiger.PrimaryPart.Position + cameraOffset + offset
            Camera.CFrame = CFrame.new(
                Camera.CFrame.Position:Lerp(targetPosition, 0.1),
                tiger.PrimaryPart.Position
            )
        end
    end

    -- Function to handle keyboard input
    local function onInputBegan(input, isProcessed)
        if isProcessed or not (isToggleActive and selectedOption == "Control Huge Tiger") then return end
        
        if controlEnabled then
            if input.KeyCode == Enum.KeyCode.W then
                moveDirection = moveDirection + Vector3.new(0, 0, -1)
            elseif input.KeyCode == Enum.KeyCode.A then
                moveDirection = moveDirection + Vector3.new(-1, 0, 0)
            elseif input.KeyCode == Enum.KeyCode.S then
                moveDirection = moveDirection + Vector3.new(0, 0, 1)
            elseif input.KeyCode == Enum.KeyCode.D then
                moveDirection = moveDirection + Vector3.new(1, 0, 0)
            end
        end
    end

    -- Function to handle keyboard input release
    local function onInputEnded(input, isProcessed)
        if isProcessed or not (isToggleActive and selectedOption == "Control Huge Tiger") then return end
        
        if controlEnabled then
            if input.KeyCode == Enum.KeyCode.W then
                moveDirection = moveDirection - Vector3.new(0, 0, -1)
            elseif input.KeyCode == Enum.KeyCode.A then
                moveDirection = moveDirection - Vector3.new(-1, 0, 0)
            elseif input.KeyCode == Enum.KeyCode.S then
                moveDirection = moveDirection - Vector3.new(0, 0, 1)
            elseif input.KeyCode == Enum.KeyCode.D then
                moveDirection = moveDirection - Vector3.new(1, 0, 0)
            end
        end
    end

    -- Function to handle mobile touch input
    local function onTouch(input)
        if not (isToggleActive and selectedOption == "Control Huge Tiger") then return end
        
        if controlEnabled then
            local touchPosition = input.Position
            local screenSize = Vector2.new(Camera.ViewportSize.X, Camera.ViewportSize.Y)
            local centerScreen = screenSize / 2
            local direction = (touchPosition - centerScreen).Unit
            
            if touchPosition.X < screenSize.X / 2 then
                moveDirection = moveDirection + Vector3.new(-direction.X, 0, -direction.Y)
            else
                moveDirection = moveDirection + Vector3.new(direction.X, 0, direction.Y)
            end
        end
    end

    -- Connect functions to events
    UserInputService.InputBegan:Connect(onInputBegan)
    UserInputService.InputEnded:Connect(onInputEnded)
    UserInputService.TouchStarted:Connect(onTouch)
    RunService.RenderStepped:Connect(updateMovement)
    RunService.RenderStepped:Connect(updateCamera)

    -- Set the tiger's PrimaryPart (make sure the tiger model has a PrimaryPart set)
    if not tiger.PrimaryPart then
        tiger.PrimaryPart = tiger:FindFirstChildWhichIsA("BasePart")
    end

    -- Function to activate and deactivate control
    local function toggleControl(state)
        if state then
            originalCameraType = Camera.CameraType
            originalCameraSubject = Camera.CameraSubject
            Camera.CameraType = Enum.CameraType.Scriptable
            Camera.CameraSubject = tiger
            playSound(toggleOnSoundId, 7)
            createWarpEffect(7)
        else
            Camera.CameraType = originalCameraType
            Camera.CameraSubject = originalCameraSubject
            playSound(toggleOffSoundId, 3)
            createWarpEffect(3)
        end
    end

    -- UI Elements

    -- Create the toggle
    local toggle = Tab:AddToggle({
        Name = "Control Toys Beta",
        Default = false,
        Callback = function(Value)
            isToggleActive = Value
            toggleControl(isToggleActive)
            print("Toggle is now: " .. tostring(Value))
        end    
    })

    -- Create the dropdown menu
    local dropdown = Tab:AddDropdown({
        Name = "Toys",
        Default = "Control Huge Tiger",
        Options = {"Control Huge Tiger", "2"},
        Callback = function(Value)
            selectedOption = Value
            if isToggleActive then
                print("Dropdown Value: " .. Value)
            else
                print("Dropdown is disabled")
            end
        end    
    })
end

main() -- Call the main function
